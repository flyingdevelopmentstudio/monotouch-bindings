<?xml version="1.0" encoding="utf-8"?>
<Type Name="DBAccountManager" FullName="DropBoxSync.iOS.DBAccountManager">
  <TypeSignature Language="C#" Value="public class DBAccountManager : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DBAccountManager extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>DropBoxSync.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("DBAccountManager", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>The account manager is responsible for linking new users and persisting account information across runs of your app. You typically create an account manager at app startup with your app key and secret and keep it until your app terminates. </para>
    </summary>
    <remarks>
      <para>The account manager is responsible for linking new users and persisting account information across runs of your app. You typically create an account manager at app startup with your app key and secret and keep it until your app terminates. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBAccountManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBAccountManager (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBAccountManager (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBAccountManager (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBAccountManager (string key, string secret);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string key, string secret) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithAppKey:secret:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="secret" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="secret">To be added.</param>
        <summary>
          <para>Create a new account manager with your app's app key and secret. You can register your app or find your key at the <ulink url="https://www.dropbox.com/developers/apps">apps</ulink> page. Note that right now only apps with the App Folder permission can use the Sync API. </para>
        </summary>
        <remarks>
          <para>Create a new account manager with your app's app key and secret. You can register your app or find your key at the <ulink url="https://www.dropbox.com/developers/apps">apps</ulink> page. Note that right now only apps with the App Folder permission can use the Sync API. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddObserver">
      <MemberSignature Language="C#" Value="public virtual void AddObserver (MonoTouch.Foundation.NSObject observer, DropBoxSync.iOS.DBAccountManagerObserverHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObserver(class MonoTouch.Foundation.NSObject observer, class DropBoxSync.iOS.DBAccountManagerObserverHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("addObserver:block:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="handler" Type="DropBoxSync.iOS.DBAccountManagerObserverHandler" />
      </Parameters>
      <Docs>
        <param name="observer">this is only used as a handle to unregister blocks with the &lt;removeObserver:&gt; method. </param>
        <param name="handler">To be added.</param>
        <summary>
          <para>Add <computeroutput>block</computeroutput> as an observer to get called whenever a new account is linked or an existing account is unlinked.</para>
        </summary>
        <remarks>
          <para>Add <computeroutput>block</computeroutput> as an observer to get called whenever a new account is linked or an existing account is unlinked.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleOpenURL">
      <MemberSignature Language="C#" Value="public virtual DropBoxSync.iOS.DBAccount HandleOpenURL (MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class DropBoxSync.iOS.DBAccount HandleOpenURL(class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("handleOpenURL:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBAccount</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>
          <para>You must call this method in your app delegate's <computeroutput>-application:openURL:sourceApplication:annotation:</computeroutput> method in order to complete the link process.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>You must call this method in your app delegate's <computeroutput>-application:openURL:sourceApplication:annotation:</computeroutput> method in order to complete the link process.</para>
          <para>
            <para>The [account](<see cref="T:DropBoxSync.iOS.DBAccount" />) object if the link was successful, or <computeroutput>nil</computeroutput> if the user cancelled. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedAccount">
      <MemberSignature Language="C#" Value="public virtual DropBoxSync.iOS.DBAccount LinkedAccount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DropBoxSync.iOS.DBAccount LinkedAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("linkedAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The currently linked account, or <computeroutput>nil</computeroutput> if there are no accounts currently linked. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The currently linked account, or <computeroutput>nil</computeroutput> if there are no accounts currently linked. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkFromController">
      <MemberSignature Language="C#" Value="public virtual void LinkFromController (MonoTouch.UIKit.UIViewController rootController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LinkFromController(class MonoTouch.UIKit.UIViewController rootController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("linkFromController:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootController" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="rootController">the topmost view controller in your controller hierarchy. </param>
        <summary>
          <para>This method beings the process for linking new accounts.</para>
        </summary>
        <remarks>
          <para>This method beings the process for linking new accounts.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObserver">
      <MemberSignature Language="C#" Value="public virtual void RemoveObserver (MonoTouch.Foundation.NSObject observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObserver(class MonoTouch.Foundation.NSObject observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeObserver:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="observer">the same value you provided to the &lt;addObserver:block:&gt; method. </param>
        <summary>
          <para>Use this method to remove all blocks associated with <computeroutput>observer</computeroutput>.</para>
        </summary>
        <remarks>
          <para>Use this method to remove all blocks associated with <computeroutput>observer</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSharedManager">
      <MemberSignature Language="C#" Value="public static void SetSharedManager (DropBoxSync.iOS.DBAccountManager sharedManager);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSharedManager(class DropBoxSync.iOS.DBAccountManager sharedManager) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setSharedManager:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharedManager" Type="DropBoxSync.iOS.DBAccountManager" />
      </Parameters>
      <Docs>
        <param name="sharedManager">To be added.</param>
        <summary>
          <para>A convenient place to store your app's account manager. </para>
        </summary>
        <remarks>
          <para>A convenient place to store your app's account manager. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedManager">
      <MemberSignature Language="C#" Value="public static DropBoxSync.iOS.DBAccountManager SharedManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class DropBoxSync.iOS.DBAccountManager SharedManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sharedManager")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBAccountManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A convenient place to get your app's account manager. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>A convenient place to get your app's account manager. </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>