<?xml version="1.0" encoding="utf-8"?>
<Type Name="DBFile" FullName="DropBoxSync.iOS.DBFile">
  <TypeSignature Language="C#" Value="public class DBFile : MonoTouch.Foundation.NSError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DBFile extends MonoTouch.Foundation.NSError" />
  <AssemblyInfo>
    <AssemblyName>DropBoxSync.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSError</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("DBFile", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>The file object represents a particular file at a particular version. It has basic file operations such as reading and writing the file's contents and getting info about the file. It can also tell you the current sync status, whether there's a newer version available, and allows you to update to the newer version. </para>
    </summary>
    <remarks>
      <para>The file object represents a particular file at a particular version. It has basic file operations such as reading and writing the file's contents and getting info about the file. It can also tell you the current sync status, whether there's a newer version available, and allows you to update to the newer version. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBFile (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBFile (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DBFile (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddObserver">
      <MemberSignature Language="C#" Value="public virtual void AddObserver (MonoTouch.Foundation.NSObject observer, DropBoxSync.iOS.DBObserverHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObserver(class MonoTouch.Foundation.NSObject observer, class DropBoxSync.iOS.DBObserverHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("addObserver:block:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="handler" Type="DropBoxSync.iOS.DBObserverHandler" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>
          <para>Add <computeroutput>block</computeroutput> as an observer when a property of the file changes. </para>
        </summary>
        <remarks>
          <para>Add <computeroutput>block</computeroutput> as an observer when a property of the file changes. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual bool Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("close")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Closes the file, preventing any further operations to occur and allowing the file to be opened again. This happens automatically when the object is deallocated. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Closes the file, preventing any further operations to occur and allowing the file to be opened again. This happens automatically when the object is deallocated. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public virtual DropBoxSync.iOS.DBFileInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DropBoxSync.iOS.DBFileInfo Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("info")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBFileInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The <see cref="T:DropBoxSync.iOS.DBFileInfo" /> for the file.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The <see cref="T:DropBoxSync.iOS.DBFileInfo" /> for the file.</para>
          <para>Note that the path of a file can change if a conflict occurs, so the value of <computeroutput>file.info.path</computeroutput> is not always equal to the path the file was opened at. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewerStatus">
      <MemberSignature Language="C#" Value="public virtual DropBoxSync.iOS.DBFileStatus NewerStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DropBoxSync.iOS.DBFileStatus NewerStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("newerStatus")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBFileStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The current sync status for the newer version of the file. If the file is the newest version, then this property is <computeroutput>nil</computeroutput>. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The current sync status for the newer version of the file. If the file is the newest version, then this property is <computeroutput>nil</computeroutput>. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual bool Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("isOpen")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadData">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSData ReadData (out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSData ReadData(class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("readData:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>
          <para>A wrapper for &lt;readHandle:&gt; that reads the entire file contents into an NSData object.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>A wrapper for &lt;readHandle:&gt; that reads the entire file contents into an NSData object.</para>
          <para>
            <para>The file's contents if the file can be read, or <computeroutput>nil</computeroutput> if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString (out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString(class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("readString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>
          <para>A wrapper for &lt;readHandle:&gt; that reads the entire file contents as a UTF8 encoded string.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>A wrapper for &lt;readHandle:&gt; that reads the entire file contents as a UTF8 encoded string.</para>
          <para>
            <para>The file's contents decoded as UTF8 if the file can be read, or <computeroutput>nil</computeroutput> if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObserver">
      <MemberSignature Language="C#" Value="public virtual void RemoveObserver (MonoTouch.Foundation.NSObject observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObserver(class MonoTouch.Foundation.NSObject observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeObserver:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>
          <para>Remove all blocks registered for the given <computeroutput>observer</computeroutput>. </para>
        </summary>
        <remarks>
          <para>Remove all blocks registered for the given <computeroutput>observer</computeroutput>. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public virtual DropBoxSync.iOS.DBFileStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DropBoxSync.iOS.DBFileStatus Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("status")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DropBoxSync.iOS.DBFileStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The current sync status for the file. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The current sync status for the file. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual bool Update (out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Update(class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("update:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>
          <para>If there is a newer version of the file available, and it's cached (determined by the cached property on &lt;newerStatus&gt;), then this method will update the file object to reference the newer version so it can be read from or written to.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>If there is a newer version of the file available, and it's cached (determined by the cached property on &lt;newerStatus&gt;), then this method will update the file object to reference the newer version so it can be read from or written to.</para>
          <para>
            <para>YES if the file was written successfully, or NO if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentsOfFile">
      <MemberSignature Language="C#" Value="public virtual bool WriteContentsOfFile (string localPath, bool shouldSteal, out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteContentsOfFile(string localPath, bool shouldSteal, class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("writeContentsOfFile:shouldSteal:error:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localPath" Type="System.String" />
        <Parameter Name="shouldSteal" Type="System.Boolean" />
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="localPath">whether the file at localPath should be copied of if it can be moved from its current location into management by the Sync SDK. If you are done with the file at localPath, then stealing is more efficient, but the behavior of writing to the file after stealing is undefined. </param>
        <param name="shouldSteal">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
          <para>Updates the file's contents with the contents of the file at <computeroutput>localPath</computeroutput>. If the file is not cached then an error will be generated.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Updates the file's contents with the contents of the file at <computeroutput>localPath</computeroutput>. If the file is not cached then an error will be generated.</para>
          <para>
            <para>YES if the file was written successfully, or NO if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteData">
      <MemberSignature Language="C#" Value="public virtual bool WriteData (MonoTouch.Foundation.NSData data, out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteData(class MonoTouch.Foundation.NSData data, class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("writeData:error:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
          <para>Updates the contents of the file to be the bytes store in <computeroutput>data</computeroutput>. If the file is not cached then an error will be generated.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Updates the contents of the file to be the bytes store in <computeroutput>data</computeroutput>. If the file is not cached then an error will be generated.</para>
          <para>
            <para>YES if the file was written successfully, or NO if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public virtual bool WriteString (string aString, out DropBoxSync.iOS.DBError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteString(string aString, class DropBoxSync.iOS.DBError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("writeString:error:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aString" Type="System.String" />
        <Parameter Name="error" Type="DropBoxSync.iOS.DBError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="aString">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
          <para>Updates the contents of the file with the parameter <computeroutput>string</computeroutput> encoded in UTF8. If the file is not cached then an error will be generated.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Updates the contents of the file with the parameter <computeroutput>string</computeroutput> encoded in UTF8. If the file is not cached then an error will be generated.</para>
          <para>
            <para>YES if the file was written successfully, or NO if an error occurred. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>