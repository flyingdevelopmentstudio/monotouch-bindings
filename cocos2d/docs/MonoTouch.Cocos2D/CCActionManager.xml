<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCActionManager" FullName="MonoTouch.Cocos2D.CCActionManager">
  <TypeSignature Language="C#" Value="public class CCActionManager : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCActionManager extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCActionManager", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCActionManager" /> the object that manages all the actions. Normally you won't need to use this API directly. 99% of the cases you will use the <see cref="T:MonoTouch.Cocos2D.CCNode" /> interface, which uses this object. But there are some cases where you might need to use this API dirctly: Examples:<list type="bullet"><item><description>When you want to run an action where the target is different from a CCNode.</description></item><item><description>When you want to pause / resume the actions</description></item></list></para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCActionManager" /> the object that manages all the actions. Normally you won't need to use this API directly. 99% of the cases you will use the <see cref="T:MonoTouch.Cocos2D.CCNode" /> interface, which uses this object. But there are some cases where you might need to use this API dirctly: Examples:<list type="bullet"><item><description>When you want to run an action where the target is different from a CCNode.</description></item><item><description>When you want to pause / resume the actions</description></item></list></para>
      <para>
        <simplesect kind="since">
          <para>v0.8 </para>
        </simplesect>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionManager (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionManager (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionManager (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionsInTarget">
      <MemberSignature Language="C#" Value="public virtual uint ActionsInTarget (MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 ActionsInTarget(class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("numberOfRunningActionsInTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Returns the numbers of actions that are running in a certain target Composable actions are counted as 1 action. Example: If you are running 1 Sequence of 7 actions, it will return 1. If you are running 7 Sequences of 2 actions, it will return 7. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the numbers of actions that are running in a certain target Composable actions are counted as 1 action. Example: If you are running 1 Sequence of 7 actions, it will return 1. If you are running 7 Sequences of 2 actions, it will return 7. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public virtual void AddAction (MonoTouch.Cocos2D.CCAction action, MonoTouch.Cocos2D.CCNode target, bool paused);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAction(class MonoTouch.Cocos2D.CCAction action, class MonoTouch.Cocos2D.CCNode target, bool paused) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("addAction:target:paused:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="MonoTouch.Cocos2D.CCAction" />
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
        <Parameter Name="paused" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="target">To be added.</param>
        <param name="paused">To be added.</param>
        <summary>
          <para>Adds an action with a target. If the target is already present, then the action will be added to the existing target. If the target is not present, a new instance of this target will be created either paused or paused, and the action will be added to the newly created target. When the target is paused, the queued actions won't be 'ticked'. </para>
        </summary>
        <remarks>
          <para>Adds an action with a target. If the target is already present, then the action will be added to the existing target. If the target is not present, a new instance of this target will be created either paused or paused, and the action will be added to the newly created target. When the target is paused, the queued actions won't be 'ticked'. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAction">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCAction GetAction (int tag, MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Cocos2D.CCAction GetAction(int32 tag, class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getActionByTag:target:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Int32" />
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
          <para>Gets an action given its tag an a target <simplesect kind="return"><para>the Action the with the given tag </para></simplesect></para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets an action given its tag an a target <simplesect kind="return"><para>the Action the with the given tag </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseAllRunningActions">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSSet PauseAllRunningActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSSet PauseAllRunningActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pauseAllRunningActions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Pauses all running actions, returning a list of targets whose actions were paused. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Pauses all running actions, returning a list of targets whose actions were paused. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTarget">
      <MemberSignature Language="C#" Value="public virtual void PauseTarget (MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PauseTarget(class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pauseTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Pauses the target: all running actions and newly added actions will be paused. </para>
        </summary>
        <remarks>
          <para>Pauses the target: all running actions and newly added actions will be paused. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAction">
      <MemberSignature Language="C#" Value="public virtual void RemoveAction (MonoTouch.Cocos2D.CCAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAction(class MonoTouch.Cocos2D.CCAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="MonoTouch.Cocos2D.CCAction" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>
          <para>Removes an action given an action reference. </para>
        </summary>
        <remarks>
          <para>Removes an action given an action reference. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAction">
      <MemberSignature Language="C#" Value="public virtual void RemoveAction (int tag, MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAction(int32 tag, class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeActionByTag:target:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Int32" />
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
          <para>Removes an action given its tag and the target </para>
        </summary>
        <remarks>
          <para>Removes an action given its tag and the target </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActions">
      <MemberSignature Language="C#" Value="public virtual void RemoveActions (MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActions(class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeAllActionsFromTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Removes all actions from a certain target. All the actions that belongs to the target will be removed. </para>
        </summary>
        <remarks>
          <para>Removes all actions from a certain target. All the actions that belongs to the target will be removed. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllActions">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("removeAllActions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Removes all actions from all the targers. </para>
        </summary>
        <remarks>
          <para>Removes all actions from all the targers. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTarget">
      <MemberSignature Language="C#" Value="public virtual void ResumeTarget (MonoTouch.Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeTarget(class MonoTouch.Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("resumeTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Resumes the target. All queued actions will be resumed. </para>
        </summary>
        <remarks>
          <para>Resumes the target. All queued actions will be resumed. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTargets">
      <MemberSignature Language="C#" Value="public virtual void ResumeTargets (MonoTouch.Foundation.NSSet targetsToResume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeTargets(class MonoTouch.Foundation.NSSet targetsToResume) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("resumeTargets:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetsToResume" Type="MonoTouch.Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="targetsToResume">To be added.</param>
        <summary>
          <para>Resume a set of targets (convenience function to reverse a pauseAllRunningActions call) </para>
        </summary>
        <remarks>
          <para>Resume a set of targets (convenience function to reverse a pauseAllRunningActions call) </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>