<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCCamera" FullName="MonoTouch.Cocos2D.CCCamera">
  <TypeSignature Language="C#" Value="public class CCCamera : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCCamera extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCCamera", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>A <see cref="T:MonoTouch.Cocos2D.CCCamera" /> is used in every <see cref="T:MonoTouch.Cocos2D.CCNode" />. Useful to look at the object from different views. The OpenGL gluLookAt() function is used to locate the camera.</para>
    </summary>
    <remarks>
      <para>A <see cref="T:MonoTouch.Cocos2D.CCCamera" /> is used in every <see cref="T:MonoTouch.Cocos2D.CCNode" />. Useful to look at the object from different views. The OpenGL gluLookAt() function is used to locate the camera.</para>
      <para>If the object is transformed by any of the scale, rotation or position attributes, then they will override the camera. <verbatim>IMPORTANT: Either your use the camera or the rotation/scale/position properties. You can't use both.
</verbatim> World coordinates won't work if you use the camera.</para>
      <para>Limitations:</para>
      <para>
        <list type="bullet">
          <item>
            <description>Some nodes, like CCParallaxNode, CCParticle uses world node coordinates, and they won't work properly if you move them (or any of their ancestors) using the camera.</description>
          </item>
        </list>
      </para>
      <para>
        <list type="bullet">
          <item>
            <description>It doesn't work on batched nodes like CCSprite objects when they are parented to a CCSpriteBatchNode object.It is recommended to use it ONLY if you are going to create 3D effects. For 2D effecs, use the action CCFollow or position/scale/rotate. </description>
          </item>
        </list>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCCamera ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCCamera (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCCamera (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCCamera (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public virtual bool Dirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("dirty")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDirty:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>whether of not the camera is dirty </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>whether of not the camera is dirty </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCenter">
      <MemberSignature Language="C#" Value="public virtual void GetCenter (out float x, out float y, out float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCenter(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("centerX:centerY:centerZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="z" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>get the center vector values in points </para>
        </summary>
        <remarks>
          <para>get the center vector values in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEye">
      <MemberSignature Language="C#" Value="public virtual void GetEye (out float x, out float y, out float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetEye(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("eyeX:eyeY:eyeZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="z" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>get the eye vector values in points </para>
        </summary>
        <remarks>
          <para>get the eye vector values in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUp">
      <MemberSignature Language="C#" Value="public virtual void GetUp (out float x, out float y, out float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetUp(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("upX:upY:upZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="z" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>get the up vector values </para>
        </summary>
        <remarks>
          <para>get the up vector values </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locate">
      <MemberSignature Language="C#" Value="public virtual void Locate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Locate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Sets the camera using gluLookAt using its eye, center and up_vector </para>
        </summary>
        <remarks>
          <para>Sets the camera using gluLookAt using its eye, center and up_vector </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public virtual void Restore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("restore")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>sets the camera in the defaul position </para>
        </summary>
        <remarks>
          <para>sets the camera in the defaul position </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCenter">
      <MemberSignature Language="C#" Value="public virtual void SetCenter (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCenter(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setCenterX:centerY:centerZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>sets the center values in points </para>
        </summary>
        <remarks>
          <para>sets the center values in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEye">
      <MemberSignature Language="C#" Value="public virtual void SetEye (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEye(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setEyeX:eyeY:eyeZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>sets the eye values in points </para>
        </summary>
        <remarks>
          <para>sets the eye values in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUp">
      <MemberSignature Language="C#" Value="public virtual void SetUp (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUp(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setUpX:upY:upZ:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>
          <para>sets the up values </para>
        </summary>
        <remarks>
          <para>sets the up values </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZEye">
      <MemberSignature Language="C#" Value="public static float ZEye { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 ZEye" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("getZEye")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>