<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCLabelBMFont" FullName="MonoTouch.Cocos2D.CCLabelBMFont">
  <TypeSignature Language="C#" Value="public class CCLabelBMFont : MonoTouch.Cocos2D.CCSpriteBatchNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCLabelBMFont extends MonoTouch.Cocos2D.CCSpriteBatchNode" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Cocos2D.CCSpriteBatchNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCLabelBMFont", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCLabelBMFont" /> is a subclass of <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /></para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCLabelBMFont" /> is a subclass of <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /></para>
      <para>Features:<list type="bullet"><item><description>Treats each character like a CCSprite. This means that each individual character can be:</description></item><item><description>rotated</description></item><item><description>scaled</description></item><item><description>translated</description></item><item><description>tinted</description></item><item><description>chage the opacity</description></item><item><description>It can be used as part of a menu item.</description></item><item><description>anchorPoint can be used to align the "label"</description></item><item><description>Supports AngelCode text format</description></item></list></para>
      <para>Limitations:<list type="bullet"><item><description>All inner characters are using an anchorPoint of (0.5f, 0.5f) and it is not recommend to change it because it might affect the rendering</description></item></list></para>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCLabelBMFont" /> implements the protocol <ref refid="protocol_c_c_label_protocol-p" kindref="compound">CCLabelProtocol</ref>, like CCLabel and <see cref="T:MonoTouch.Cocos2D.CCLabelAtlas" />. <see cref="T:MonoTouch.Cocos2D.CCLabelBMFont" /> has the flexibility of CCLabel, the speed of <see cref="T:MonoTouch.Cocos2D.CCLabelAtlas" /> and all the features of <see cref="T:MonoTouch.Cocos2D.CCSprite" />. If in doubt, use <see cref="T:MonoTouch.Cocos2D.CCLabelBMFont" /> instead of <see cref="T:MonoTouch.Cocos2D.CCLabelAtlas" /> / CCLabel.</para>
      <para>Supported editors:<list type="bullet"><item><description>http://glyphdesigner.71squared.com/</description></item><item><description>http://www.bmglyph.com/</description></item><item><description>http://www.n4te.com/hiero/hiero.jnlp</description></item><item><description>http://slick.cokeandcode.com/demos/hiero.jnlp</description></item><item><description>http://www.angelcode.com/products/bmfont/</description></item></list></para>
      <para>
        <simplesect kind="since">
          <para>v0.8 </para>
        </simplesect>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (string label, string fontFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string label, string fontFile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithString:fntFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="fontFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="fontFile">To be added.</param>
        <summary>
          <para>init a BMFont label with an initial string and the FNT file </para>
        </summary>
        <remarks>
          <para>init a BMFont label with an initial string and the FNT file </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (string label, string fontFile, float width, MonoTouch.UIKit.UITextAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string label, string fontFile, float32 width, valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithString:fntFile:width:alignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="fontFile" Type="System.String" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="fontFile">To be added.</param>
        <param name="width">To be added.</param>
        <param name="alignment">To be added.</param>
        <summary>
          <para>init a BMFont label with an initial string and the FNT file, width, and alignment option </para>
        </summary>
        <remarks>
          <para>init a BMFont label with an initial string and the FNT file, width, and alignment option </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLabelBMFont (string label, string fontFile, float width, MonoTouch.UIKit.UITextAlignment alignment, System.Drawing.PointF offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string label, string fontFile, float32 width, valuetype MonoTouch.UIKit.UITextAlignment alignment, valuetype System.Drawing.PointF offset) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithString:fntFile:width:alignment:imageOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="fontFile" Type="System.String" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
        <Parameter Name="offset" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="fontFile">To be added.</param>
        <param name="width">To be added.</param>
        <param name="alignment">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>
          <para>init a BMFont label with an initial string and the FNT file, width, alignment option and the offset of where the glyphs start on the .PNG image </para>
        </summary>
        <remarks>
          <para>init a BMFont label with an initial string and the FNT file, width, alignment option and the offset of where the glyphs start on the .PNG image </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UITextAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.UIKit.UITextAlignment Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("alignment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAlignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>alignment used for the label </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>alignment used for the label </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCColor3B Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCColor3B Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("color")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCColor3B</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFontChars">
      <MemberSignature Language="C#" Value="public virtual void CreateFontChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateFontChars() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("createFontChars")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>updates the font chars based on the string to render </para>
        </summary>
        <remarks>
          <para>updates the font chars based on the string to render </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFile">
      <MemberSignature Language="C#" Value="public virtual string FontFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("fntFile")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setFntFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>fntFile used for the font </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>fntFile used for the font </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public virtual string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("string")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public virtual byte Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("opacity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setOpacity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityModifyRGB">
      <MemberSignature Language="C#" Value="public virtual bool OpacityModifyRGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OpacityModifyRGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("doesOpacityModifyRGB")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("opacityModifyRGB:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeCachedData">
      <MemberSignature Language="C#" Value="public static void PurgeCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PurgeCachedData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("purgeCachedData")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Purges the cached data. Removes from memory the cached configurations and the atlas name dictionary. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Purges the cached data. Removes from memory the cached configurations and the atlas name dictionary. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlignment">
      <MemberSignature Language="C#" Value="public virtual void SetAlignment (MonoTouch.UIKit.UITextAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlignment(valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setAlignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
      </Parameters>
      <Docs>
        <param name="alignment">To be added.</param>
        <summary>
          <para>set label alignment </para>
        </summary>
        <remarks>
          <para>set label alignment </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWidth">
      <MemberSignature Language="C#" Value="public virtual void SetWidth (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWidth(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setWidth:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>set label width </para>
        </summary>
        <remarks>
          <para>set label width </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>