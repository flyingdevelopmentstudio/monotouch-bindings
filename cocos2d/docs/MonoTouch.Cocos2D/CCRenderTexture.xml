<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCRenderTexture" FullName="MonoTouch.Cocos2D.CCRenderTexture">
  <TypeSignature Language="C#" Value="public class CCRenderTexture : MonoTouch.Cocos2D.CCNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCRenderTexture extends MonoTouch.Cocos2D.CCNode" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Cocos2D.CCNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCRenderTexture", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCRenderTexture" /> is a generic rendering target. To render things into it, simply construct a render target, call begin on it, call visit on any cocos2d scenes or objects to render them, and call end. For convienience, render texture adds a sprite as its display child with the results, so you can simply add the render texture to your scene and treat it like any other <see cref="T:MonoTouch.Cocos2D.CCNode" />. There are also functions for saving the render texture to disk in PNG or JPG format.</para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCRenderTexture" /> is a generic rendering target. To render things into it, simply construct a render target, call begin on it, call visit on any cocos2d scenes or objects to render them, and call end. For convienience, render texture adds a sprite as its display child with the results, so you can simply add the render texture to your scene and treat it like any other <see cref="T:MonoTouch.Cocos2D.CCNode" />. There are also functions for saving the render texture to disk in PNG or JPG format.</para>
      <para>
        <simplesect kind="since">
          <para>v0.8.1 </para>
        </simplesect>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (int width, int height, MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithWidth:height:pixelFormat:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="pixelFormat" Type="MonoTouch.Cocos2D.CCTexture2DPixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <summary>
          <para>initializes a RenderTexture object with width and height in Points and a pixel format, only RGB and RGBA formats are valid </para>
        </summary>
        <remarks>
          <para>initializes a RenderTexture object with width and height in Points and a pixel format, only RGB and RGBA formats are valid </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (int width, int height, MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat, uint openGLdepthStencilFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat, unsigned int32 openGLdepthStencilFormat) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithWidth:height:pixelFormat:depthStencilFormat:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="pixelFormat" Type="MonoTouch.Cocos2D.CCTexture2DPixelFormat" />
        <Parameter Name="openGLdepthStencilFormat" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="openGLdepthStencilFormat">To be added.</param>
        <summary>
          <para>initializes a RenderTexture object with width and height in Points and a pixel format( only RGB and RGBA formats are valid ) and depthStencil format </para>
        </summary>
        <remarks>
          <para>initializes a RenderTexture object with width and height in Points and a pixel format( only RGB and RGBA formats are valid ) and depthStencil format </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public virtual void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Begin() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("begin")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>starts grabbing </para>
        </summary>
        <remarks>
          <para>starts grabbing </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public virtual void BeginWithClear (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWithClear(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("beginWithClear:g:b:a:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">To be added.</param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </summary>
        <remarks>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public virtual void BeginWithClear (float red, float green, float blue, float alpha, float depthValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWithClear(float32 red, float32 green, float32 blue, float32 alpha, float32 depthValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("beginWithClear:g:b:a:depth:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
        <Parameter Name="depthValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">To be added.</param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <param name="depthValue">To be added.</param>
        <summary>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </summary>
        <remarks>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public virtual void BeginWithClear (float red, float green, float blue, float alpha, float depthValue, int stencilValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWithClear(float32 red, float32 green, float32 blue, float32 alpha, float32 depthValue, int32 stencilValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("beginWithClear:g:b:a:depth:stencil:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
        <Parameter Name="depthValue" Type="System.Single" />
        <Parameter Name="stencilValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="red">To be added.</param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <param name="depthValue">To be added.</param>
        <param name="stencilValue">To be added.</param>
        <summary>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </summary>
        <remarks>
          <para>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("clear:g:b:a:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">To be added.</param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>
          <para>clears the texture with a color </para>
        </summary>
        <remarks>
          <para>clears the texture with a color </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDepth">
      <MemberSignature Language="C#" Value="public virtual void ClearDepth (float depthValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearDepth(float32 depthValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("clearDepth:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depthValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="depthValue">To be added.</param>
        <summary>
          <para>clears the texture with a specified depth value </para>
        </summary>
        <remarks>
          <para>clears the texture with a specified depth value </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearStencil">
      <MemberSignature Language="C#" Value="public virtual void ClearStencil (int stencilValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearStencil(int32 stencilValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("clearStencil:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stencilValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stencilValue">To be added.</param>
        <summary>
          <para>clears the texture with a specified stencil value </para>
        </summary>
        <remarks>
          <para>clears the texture with a specified stencil value </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public virtual void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void End() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("end")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>ends grabbing </para>
        </summary>
        <remarks>
          <para>ends grabbing </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage GetUIImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage GetUIImage() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getUIImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewCGImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGImage NewCGImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.CoreGraphics.CGImage NewCGImage() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newCGImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToFile">
      <MemberSignature Language="C#" Value="public virtual bool SaveToFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveToFile(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("saveToFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
          <para>saves the texture into a file using JPEG format. The file will be saved in the Documents folder. Returns YES if the operation is successful. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>saves the texture into a file using JPEG format. The file will be saved in the Documents folder. Returns YES if the operation is successful. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToFile">
      <MemberSignature Language="C#" Value="public virtual bool SaveToFile (string name, MonoTouch.Cocos2D.CCImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveToFile(string name, valuetype MonoTouch.Cocos2D.CCImageFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("saveToFile:format:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="format" Type="MonoTouch.Cocos2D.CCImageFormat" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="format">To be added.</param>
        <summary>
          <para>saves the texture into a file. The format could be JPG or PNG. The file will be saved in the Documents folder. Returns YES if the operation is successful. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>saves the texture into a file. The format could be JPG or PNG. The file will be saved in the Documents folder. Returns YES if the operation is successful. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sprite">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCSprite Sprite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCSprite Sprite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sprite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSprite:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCSprite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The <see cref="T:MonoTouch.Cocos2D.CCSprite" /> being used. The sprite, by default, will use the following blending function: GL_ONE, GL_ONE_MINUS_SRC_ALPHA. The blending function can be changed in runtime by calling:<list type="bullet"><item><description>[[renderTexture sprite] setBlendFunc:(ccBlendFunc){GL_ONE, GL_ONE_MINUS_SRC_ALPHA}]; </description></item></list></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The <see cref="T:MonoTouch.Cocos2D.CCSprite" /> being used. The sprite, by default, will use the following blending function: GL_ONE, GL_ONE_MINUS_SRC_ALPHA. The blending function can be changed in runtime by calling:<list type="bullet"><item><description>[[renderTexture sprite] setBlendFunc:(ccBlendFunc){GL_ONE, GL_ONE_MINUS_SRC_ALPHA}]; </description></item></list></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>