<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCScheduler" FullName="MonoTouch.Cocos2D.CCScheduler">
  <TypeSignature Language="C#" Value="public class CCScheduler : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCScheduler extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCScheduler", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCScheduler (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCScheduler (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCScheduler (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTargetPaused">
      <MemberSignature Language="C#" Value="public virtual bool IsTargetPaused (MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTargetPaused(class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("isTargetPaused:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Returns whether or not the target is paused <simplesect kind="since"><para>v1.0.0 </para></simplesect></para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns whether or not the target is paused <simplesect kind="since"><para>v1.0.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseAllTargets">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSSet PauseAllTargets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSSet PauseAllTargets() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pauseAllTargets")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Pause all selectors from all targets. You should NEVER call this method, unless you know what you are doing. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Pause all selectors from all targets. You should NEVER call this method, unless you know what you are doing. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseAllTargetsWithMinPriority">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSSet PauseAllTargetsWithMinPriority (int minPriority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSSet PauseAllTargetsWithMinPriority(int32 minPriority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pauseAllTargetsWithMinPriority:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minPriority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minPriority">To be added.</param>
        <summary>
          <para>Pause all selectors from all targets with a minimum priority. You should only call this with kCCPriorityNonSystemMin or higher. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Pause all selectors from all targets with a minimum priority. You should only call this with kCCPriorityNonSystemMin or higher. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTarget">
      <MemberSignature Language="C#" Value="public virtual void PauseTarget (MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PauseTarget(class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pauseTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Pauses the target. All scheduled selectors/update for a given target won't be 'ticked' until the target is resumed. If the target is not present, nothing happens. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Pauses the target. All scheduled selectors/update for a given target won't be 'ticked' until the target is resumed. If the target is not present, nothing happens. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatForever">
      <MemberSignature Language="C#" Value="public const uint RepeatForever = 4294967294;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 RepeatForever = (4294967294)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>4294967294</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTarget">
      <MemberSignature Language="C#" Value="public virtual void ResumeTarget (MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeTarget(class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("resumeTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Resumes the target. The 'target' will be unpaused, so all schedule selectors/update will be 'ticked' again. If the target is not present, nothing happens. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Resumes the target. The 'target' will be unpaused, so all schedule selectors/update will be 'ticked' again. If the target is not present, nothing happens. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTargets">
      <MemberSignature Language="C#" Value="public virtual void ResumeTargets (MonoTouch.Foundation.NSSet targetsToResume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeTargets(class MonoTouch.Foundation.NSSet targetsToResume) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("resumeTargets:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetsToResume" Type="MonoTouch.Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="targetsToResume">To be added.</param>
        <summary>
          <para>Resume selectors on a set of targets. This can be useful for undoing a call to pauseAllSelectors. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Resume selectors on a set of targets. This can be useful for undoing a call to pauseAllSelectors. <simplesect kind="since"><para>v2.0.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="public MonoTouch.Foundation.NSObject Schedule (Action&lt;float&gt; callback, float interval = 0, bool paused = false, uint repeat = 4294967294, float delay = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Foundation.NSObject Schedule(class System.Action`1&lt;float32&gt; callback, float32 interval, bool paused, unsigned int32 repeat, float32 delay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Single&gt;" />
        <Parameter Name="interval" Type="System.Single" />
        <Parameter Name="paused" Type="System.Boolean" />
        <Parameter Name="repeat" Type="System.UInt32" />
        <Parameter Name="delay" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="interval">To be added.</param>
        <param name="paused">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="delay">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelector">
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelector (MonoTouch.ObjCRuntime.Selector selector, MonoTouch.Foundation.NSObject target, float interval, bool paused);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelector(class MonoTouch.ObjCRuntime.Selector selector, class MonoTouch.Foundation.NSObject target, float32 interval, bool paused) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scheduleSelector:forTarget:interval:paused:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="MonoTouch.ObjCRuntime.Selector" />
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interval" Type="System.Single" />
        <Parameter Name="paused" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selector">To be added.</param>
        <param name="target">To be added.</param>
        <param name="interval">To be added.</param>
        <param name="paused">To be added.</param>
        <summary>
          <para>calls scheduleSelector with kCCRepeatForever and a 0 delay </para>
        </summary>
        <remarks>
          <para>calls scheduleSelector with kCCRepeatForever and a 0 delay </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelector">
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelector (MonoTouch.ObjCRuntime.Selector selector, MonoTouch.Foundation.NSObject target, float interval, bool paused, uint repeat, float delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelector(class MonoTouch.ObjCRuntime.Selector selector, class MonoTouch.Foundation.NSObject target, float32 interval, bool paused, unsigned int32 repeat, float32 delay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scheduleSelector:forTarget:interval:paused:repeat:delay:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="MonoTouch.ObjCRuntime.Selector" />
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interval" Type="System.Single" />
        <Parameter Name="paused" Type="System.Boolean" />
        <Parameter Name="repeat" Type="System.UInt32" />
        <Parameter Name="delay" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="selector">To be added.</param>
        <param name="target">To be added.</param>
        <param name="interval">To be added.</param>
        <param name="paused">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="delay">To be added.</param>
        <summary>
          <para>The scheduled method will be called every 'interval' seconds. If paused is YES, then it won't be called until it is resumed. If 'interval' is 0, it will be called every frame, but if so, it recommened to use 'scheduleUpdateForTarget:' instead. If the selector is already scheduled, then only the interval parameter will be updated without re-scheduling it again. repeat let the action be repeated repeat + 1 times, use kCCRepeatForever to let the action run continiously delay is the amount of time the action will wait before it'll start</para>
        </summary>
        <remarks>
          <para>The scheduled method will be called every 'interval' seconds. If paused is YES, then it won't be called until it is resumed. If 'interval' is 0, it will be called every frame, but if so, it recommened to use 'scheduleUpdateForTarget:' instead. If the selector is already scheduled, then only the interval parameter will be updated without re-scheduling it again. repeat let the action be repeated repeat + 1 times, use kCCRepeatForever to let the action run continiously delay is the amount of time the action will wait before it'll start</para>
          <para>
            <simplesect kind="since">
              <para>v0.99.3, repeat and delay added in v1.1 </para>
            </simplesect>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleUpdate">
      <MemberSignature Language="C#" Value="public virtual void ScheduleUpdate (MonoTouch.Foundation.NSObject target, int priority, bool paused);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleUpdate(class MonoTouch.Foundation.NSObject target, int32 priority, bool paused) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scheduleUpdateForTarget:priority:paused:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="priority" Type="System.Int32" />
        <Parameter Name="paused" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="priority">To be added.</param>
        <param name="paused">To be added.</param>
        <summary>
          <para>Schedules the 'update' selector for a given target with a given priority. The 'update' selector will be called every frame. The lower the priority, the earlier it is called. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Schedules the 'update' selector for a given target with a given priority. The 'update' selector will be called every frame. The lower the priority, the earlier it is called. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeScale">
      <MemberSignature Language="C#" Value="public virtual float TimeScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TimeScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("timeScale")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTimeScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Modifies the time of all scheduled callbacks. You can use this property to create a 'slow motion' or 'fast fordward' effect. Default is 1.0. To create a 'slow motion' effect, use values below 1.0. To create a 'fast fordward' effect, use values higher than 1.0. <simplesect kind="since"><para>v0.8 </para></simplesect><simplesect kind="warning"><para>It will affect EVERY scheduled selector / action. </para></simplesect></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Modifies the time of all scheduled callbacks. You can use this property to create a 'slow motion' or 'fast fordward' effect. Default is 1.0. To create a 'slow motion' effect, use values below 1.0. To create a 'fast fordward' effect, use values higher than 1.0. <simplesect kind="since"><para>v0.8 </para></simplesect><simplesect kind="warning"><para>It will affect EVERY scheduled selector / action. </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleAllSelectors">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleAllSelectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleAllSelectors() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("unscheduleAllSelectors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Unschedules all selectors from all targets. You should NEVER call this method, unless you know what you are doing.</para>
        </summary>
        <remarks>
          <para>Unschedules all selectors from all targets. You should NEVER call this method, unless you know what you are doing.</para>
          <para>
            <simplesect kind="since">
              <para>v0.99.3 </para>
            </simplesect>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleAllSelectors">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleAllSelectors (MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleAllSelectors(class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("unscheduleAllSelectorsForTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Unschedules all selectors for a given target. This also includes the "update" selector. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Unschedules all selectors for a given target. This also includes the "update" selector. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelector">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleSelector (MonoTouch.ObjCRuntime.Selector sel, MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleSelector(class MonoTouch.ObjCRuntime.Selector sel, class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("unscheduleSelector:forTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="MonoTouch.ObjCRuntime.Selector" />
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sel">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
          <para>Unshedules a selector for a given target. If you want to unschedule the "update", use unscheudleUpdateForTarget. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Unshedules a selector for a given target. If you want to unschedule the "update", use unscheudleUpdateForTarget. <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleUpdate">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleUpdate (MonoTouch.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleUpdate(class MonoTouch.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("unscheduleUpdateForTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
          <para>Unschedules the update selector for a given target <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </summary>
        <remarks>
          <para>Unschedules the update selector for a given target <simplesect kind="since"><para>v0.99.3 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (float deltaTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(float32 deltaTime) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("update:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaTime" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaTime">To be added.</param>
        <summary>
          <para>'update' the scheduler. You should NEVER call this method, unless you know what you are doing. </para>
        </summary>
        <remarks>
          <para>'update' the scheduler. You should NEVER call this method, unless you know what you are doing. </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>