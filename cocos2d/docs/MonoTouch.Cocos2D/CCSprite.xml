<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCSprite" FullName="MonoTouch.Cocos2D.CCSprite">
  <TypeSignature Language="C#" Value="public class CCSprite : MonoTouch.Cocos2D.CCNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCSprite extends MonoTouch.Cocos2D.CCNode" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Cocos2D.CCNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCSprite", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCSprite" /> is a 2d image ( <ulink url="http://en.wikipedia.org/wiki/Sprite_(computer_graphics)">http://en.wikipedia.org/wiki/Sprite_(computer_graphics)</ulink> )</para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCSprite" /> is a 2d image ( <ulink url="http://en.wikipedia.org/wiki/Sprite_(computer_graphics)">http://en.wikipedia.org/wiki/Sprite_(computer_graphics)</ulink> )</para>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCSprite" /> can be created with an image, or with a sub-rectangle of an image.</para>
      <para>If the parent or any of its ancestors is a <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /> then the following features/limitations are valid<list type="bullet"><item><description>Features when the parent is a CCBatchNode:MUCH faster rendering, specially if the CCSpriteBatchNode has many children. All the children will be drawn in a single batch.</description></item></list></para>
      <para>
        <list type="bullet">
          <item>
            <description>LimitationsCamera is not supported yet (eg: CCOrbitCamera action doesn't work)GridBase actions are not supported (eg: CCLens, CCRipple, CCTwirl)The Alias/Antialias property belongs to CCSpriteBatchNode, so you can't individually set the aliased property.The Blending function property belongs to CCSpriteBatchNode, so you can't individually set the blending function property.Parallax scroller is not supported, but can be simulated with a "proxy" sprite.</description>
          </item>
        </list>
      </para>
      <para>If the parent is an standard <see cref="T:MonoTouch.Cocos2D.CCNode" />, then <see cref="T:MonoTouch.Cocos2D.CCSprite" /> behaves like any other <see cref="T:MonoTouch.Cocos2D.CCNode" />:<list type="bullet"><item><description>It supports blending functions</description></item><item><description>It supports aliasing / antialiasing</description></item><item><description>But the rendering will be slower: 1 draw per children.</description></item></list></para>
      <para>The default anchorPoint in <see cref="T:MonoTouch.Cocos2D.CCSprite" /> is (0.5, 0.5). </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Cocos2D.CCSpriteFrame spriteFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Cocos2D.CCSpriteFrame spriteFrame) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithSpriteFrame:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="spriteFrame" Type="MonoTouch.Cocos2D.CCSpriteFrame" />
      </Parameters>
      <Docs>
        <param name="spriteFrame">To be added.</param>
        <summary>
          <para>Initializes an sprite with an sprite frame. </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with an sprite frame. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Cocos2D.CCTexture2D texture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Cocos2D.CCTexture2D texture) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTexture:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.Cocos2D.CCTexture2D" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <summary>
          <para>Initializes an sprite with a texture. The rect used will be the size of the texture. The offset will be (0,0). </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with a texture. The rect used will be the size of the texture. The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <summary>
          <para>Initializes an sprite with an image filename. The rect used will be the size of the image. The offset will be (0,0). </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with an image filename. The rect used will be the size of the image. The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Cocos2D.CCTexture2D texture, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Cocos2D.CCTexture2D texture, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTexture:rect:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.Cocos2D.CCTexture2D" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>
          <para>Initializes an sprite with a texture and a rect in points (unrotated) The offset will be (0,0). </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with a texture and a rect in points (unrotated) The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (string filename, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithFile:rect:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>
          <para>Initializes an sprite with an image filename, and a rect. The offset will be (0,0). </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with an image filename, and a rect. The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSprite (MonoTouch.Cocos2D.CCTexture2D texture, System.Drawing.RectangleF rect, bool rotated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Cocos2D.CCTexture2D texture, valuetype System.Drawing.RectangleF rect, bool rotated) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTexture:rect:rotated:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.Cocos2D.CCTexture2D" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="rotated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="rotated">To be added.</param>
        <summary>
          <para>Initializes an sprite with a texture and a rect in points, optionally rotated. The offset will be (0,0). IMPORTANT: This is the designated initializer. </para>
        </summary>
        <remarks>
          <para>Initializes an sprite with a texture and a rect in points, optionally rotated. The offset will be (0,0). IMPORTANT: This is the designated initializer. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AtlasIndex">
      <MemberSignature Language="C#" Value="public virtual uint AtlasIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 AtlasIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("atlasIndex")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAtlasIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The index used on the TextureAtlas. Don't modify this value unless you know what you are doing </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The index used on the TextureAtlas. Don't modify this value unless you know what you are doing </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchNode">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCSpriteBatchNode BatchNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCSpriteBatchNode BatchNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("batchNode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setBatchNode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCSpriteBatchNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>weak reference to the <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /> that renders the <see cref="T:MonoTouch.Cocos2D.CCSprite" /></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>weak reference to the <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /> that renders the <see cref="T:MonoTouch.Cocos2D.CCSprite" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFunc">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCBlendFunc BlendFunc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCBlendFunc BlendFunc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("blendFunc")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setBlendFunc:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCBlendFunc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>conforms to <ref refid="protocol_c_c_texture_protocol-p" kindref="compound">CCTextureProtocol</ref> protocol </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>conforms to <ref refid="protocol_c_c_texture_protocol-p" kindref="compound">CCTextureProtocol</ref> protocol </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCColor3B Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCColor3B Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("color")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCColor3B</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>RGB colors: conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>RGB colors: conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public virtual bool Dirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("dirty")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDirty:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>whether or not the Sprite needs to be updated in the Atlas </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>whether or not the Sprite needs to be updated in the Atlas </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFrame">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCSpriteFrame DisplayFrame { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCSpriteFrame DisplayFrame" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("displayFrame")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDisplayFrame:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCSpriteFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlipX">
      <MemberSignature Language="C#" Value="public virtual bool FlipX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlipX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("flipX")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setFlipX:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>whether or not the sprite is flipped horizontally. It only flips the texture of the sprite, and not the texture of the sprite's children. Also, flipping the texture doesn't alter the anchorPoint. If you want to flip the anchorPoint too, and/or to flip the children too use: <verbatim>   sprite.scaleX *= -1;</verbatim></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>whether or not the sprite is flipped horizontally. It only flips the texture of the sprite, and not the texture of the sprite's children. Also, flipping the texture doesn't alter the anchorPoint. If you want to flip the anchorPoint too, and/or to flip the children too use: <verbatim>   sprite.scaleX *= -1;</verbatim></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlipY">
      <MemberSignature Language="C#" Value="public virtual bool FlipY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlipY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("flipY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setFlipY:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>whether or not the sprite is flipped vertically. It only flips the texture of the sprite, and not the texture of the sprite's children. Also, flipping the texture doesn't alter the anchorPoint. If you want to flip the anchorPoint too, and/or to flip the children too use: <verbatim>   sprite.scaleY *= -1;</verbatim></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>whether or not the sprite is flipped vertically. It only flips the texture of the sprite, and not the texture of the sprite's children. Also, flipping the texture doesn't alter the anchorPoint. If you want to flip the anchorPoint too, and/or to flip the children too use: <verbatim>   sprite.scaleY *= -1;</verbatim></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSpriteFile">
      <MemberSignature Language="C#" Value="public static MonoTouch.Cocos2D.CCSprite FromSpriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Cocos2D.CCSprite FromSpriteFile(string filename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("spriteWithFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCSprite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <summary>
          <para>Creates an sprite with an image filename. The rect used will be the size of the image. The offset will be (0,0). </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an sprite with an image filename. The rect used will be the size of the image. The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSpriteFile">
      <MemberSignature Language="C#" Value="public static MonoTouch.Cocos2D.CCSprite FromSpriteFile (string filename, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Cocos2D.CCSprite FromSpriteFile(string filename, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("spriteWithFile:rect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCSprite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>
          <para>Creates an sprite with an image filename and a rect. The offset will be (0,0). </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an sprite with an image filename and a rect. The offset will be (0,0). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWithCGImagekey">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject InitWithCGImagekey (MonoTouch.CoreGraphics.CGImage image, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject InitWithCGImagekey(class MonoTouch.CoreGraphics.CGImage image, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGImage:key:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
          <para>Initializes an sprite with a CGImageRef and a key The key is used by the <see cref="T:MonoTouch.Cocos2D.CCTextureCache" /> to know if a texture was already created with this CGImage. For example, a valid key is: "sprite_frame_01". If key is nil, then a new texture will be created each time by the <see cref="T:MonoTouch.Cocos2D.CCTextureCache" />. <simplesect kind="since"><para>v0.99.0 </para></simplesect></para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Initializes an sprite with a CGImageRef and a key The key is used by the <see cref="T:MonoTouch.Cocos2D.CCTextureCache" /> to know if a texture was already created with this CGImage. For example, a valid key is: "sprite_frame_01". If key is nil, then a new texture will be created each time by the <see cref="T:MonoTouch.Cocos2D.CCTextureCache" />. <simplesect kind="since"><para>v0.99.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFrameDisplayed">
      <MemberSignature Language="C#" Value="public virtual bool IsFrameDisplayed (MonoTouch.Cocos2D.CCSpriteFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFrameDisplayed(class MonoTouch.Cocos2D.CCSpriteFrame frame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("isFrameDisplayed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="MonoTouch.Cocos2D.CCSpriteFrame" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <summary>
          <para>returns whether or not a <see cref="T:MonoTouch.Cocos2D.CCSpriteFrame" /> is being displayed </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>returns whether or not a <see cref="T:MonoTouch.Cocos2D.CCSpriteFrame" /> is being displayed </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetPosition">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF OffsetPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF OffsetPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("offsetPosition")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>offset position in points of the sprite in points. Calculated automatically by editors like Zwoptex. <simplesect kind="since"><para>v0.99.0 </para></simplesect></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>offset position in points of the sprite in points. Calculated automatically by editors like Zwoptex. <simplesect kind="since"><para>v0.99.0 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public virtual byte Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("opacity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setOpacity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>opacity: conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>opacity: conforms to <ref refid="protocol_c_c_r_g_b_a_protocol-p" kindref="compound">CCRGBAProtocol</ref> protocol </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityModifyRGB">
      <MemberSignature Language="C#" Value="public virtual bool OpacityModifyRGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OpacityModifyRGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("doesOpacityModifyRGB")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("opacityModifyRGB:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quad">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCV3F_C4B_T2F_Quad Quad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCV3F_C4B_T2F_Quad Quad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("quad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCV3F_C4B_T2F_Quad</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>the quad (tex coords, vertex coords and color) information </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>the quad (tex coords, vertex coords and color) information </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayFrame">
      <MemberSignature Language="C#" Value="public virtual void SetDisplayFrame (string animationName, int frameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayFrame(string animationName, int32 frameIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setDisplayFrameWithAnimationName:index:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animationName" Type="System.String" />
        <Parameter Name="frameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="animationName">To be added.</param>
        <param name="frameIndex">To be added.</param>
        <summary>
          <para>changes the display frame with animation name and index. The animation name will be get from the <see cref="T:MonoTouch.Cocos2D.CCAnimationCache" /><simplesect kind="since"><para>v0.99.5 </para></simplesect></para>
        </summary>
        <remarks>
          <para>changes the display frame with animation name and index. The animation name will be get from the <see cref="T:MonoTouch.Cocos2D.CCAnimationCache" /><simplesect kind="since"><para>v0.99.5 </para></simplesect></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextureRect">
      <MemberSignature Language="C#" Value="public virtual void SetTextureRect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextureRect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setTextureRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>
          <para>set the texture rect of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points. It will call setTextureRect:rotated:untrimmedSize with rotated = NO, and utrimmedSize = rect.size. </para>
        </summary>
        <remarks>
          <para>set the texture rect of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points. It will call setTextureRect:rotated:untrimmedSize with rotated = NO, and utrimmedSize = rect.size. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextureRect">
      <MemberSignature Language="C#" Value="public virtual void SetTextureRect (System.Drawing.RectangleF rect, bool rotated, System.Drawing.SizeF untrimmedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextureRect(valuetype System.Drawing.RectangleF rect, bool rotated, valuetype System.Drawing.SizeF untrimmedSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setTextureRect:rotated:untrimmedSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="rotated" Type="System.Boolean" />
        <Parameter Name="untrimmedSize" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="rotated">To be added.</param>
        <param name="untrimmedSize">To be added.</param>
        <summary>
          <para>set the texture rect, rectRotated and untrimmed size of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points. It will update the texture coordinates and the vertex rectangle. </para>
        </summary>
        <remarks>
          <para>set the texture rect, rectRotated and untrimmed size of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points. It will update the texture coordinates and the vertex rectangle. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVertexRect">
      <MemberSignature Language="C#" Value="public virtual void SetVertexRect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVertexRect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setVertexRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>
          <para>set the vertex rect. It will be called internally by setTextureRect. Useful if you want to create 2x images from SD images in Retina Display. Do not call it manually. Use setTextureRect instead. </para>
        </summary>
        <remarks>
          <para>set the vertex rect. It will be called internally by setTextureRect. Useful if you want to create 2x images from SD images in Retina Display. Do not call it manually. Use setTextureRect instead. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCTexture2D Texture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("texture")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTexture:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureAtlas">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCTextureAtlas TextureAtlas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCTextureAtlas TextureAtlas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("textureAtlas")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTextureAtlas:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTextureAtlas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>weak reference of the <see cref="T:MonoTouch.Cocos2D.CCTextureAtlas" /> used when the sprite is rendered using a <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /></para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>weak reference of the <see cref="T:MonoTouch.Cocos2D.CCTextureAtlas" /> used when the sprite is rendered using a <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureRect">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF TextureRect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF TextureRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("textureRect")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTextureRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>returns the texture rect of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>returns the texture rect of the <see cref="T:MonoTouch.Cocos2D.CCSprite" /> in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureRectRotated">
      <MemberSignature Language="C#" Value="public virtual bool TextureRectRotated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextureRectRotated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("textureRectRotated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>returns whether or not the texture rectangle is rotated </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>returns whether or not the texture rectangle is rotated </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTransform">
      <MemberSignature Language="C#" Value="public virtual void UpdateTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTransform() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("updateTransform")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>updates the quad according the the rotation, position, scale values. </para>
        </summary>
        <remarks>
          <para>updates the quad according the the rotation, position, scale values. </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>