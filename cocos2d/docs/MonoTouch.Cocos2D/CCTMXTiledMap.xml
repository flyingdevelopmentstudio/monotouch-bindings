<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCTMXTiledMap" FullName="MonoTouch.Cocos2D.CCTMXTiledMap">
  <TypeSignature Language="C#" Value="public class CCTMXTiledMap : MonoTouch.Cocos2D.CCNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCTMXTiledMap extends MonoTouch.Cocos2D.CCNode" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Cocos2D.CCNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCTMXTiledMap", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCTMXTiledMap" /> knows how to parse and render a TMX map.</para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCTMXTiledMap" /> knows how to parse and render a TMX map.</para>
      <para>It adds support for the TMX tiled map format used by <ulink url="http://www.mapeditor.org">http://www.mapeditor.org</ulink> It supports isometric, hexagonal and orthogonal tiles. It also supports object groups, objects, and properties.</para>
      <para>Features:<list type="bullet"><item><description>Each tile will be treated as an CCSprite</description></item><item><description>The sprites are created on demand. They will be created only when you call "[layer tileAt:]"</description></item><item><description>Each tile can be rotated / moved / scaled / tinted / "opacitied", since each tile is a CCSprite</description></item><item><description>Tiles can be added/removed in runtime</description></item><item><description>The z-order of the tiles can be modified in runtime</description></item><item><description>Each tile has an anchorPoint of (0,0)</description></item><item><description>The anchorPoint of the TMXTileMap is (0,0)</description></item><item><description>The TMX layers will be added as a child</description></item><item><description>The TMX layers will be aliased by default</description></item><item><description>The tileset image will be loaded using the CCTextureCache</description></item><item><description>Each tile will have a unique tag</description></item><item><description>Each tile will have a unique z value. top-left: z=1, bottom-right: z=max z</description></item><item><description>Each object group will be treated as an NSMutableArray</description></item><item><description>Object class which will contain all the properties in a dictionary</description></item><item><description>Properties can be assigned to the Map, Layer, Object Group, and Object</description></item></list></para>
      <para>Limitations:<list type="bullet"><item><description>It only supports one tileset per layer.</description></item><item><description>Embeded images are not supported</description></item><item><description>It only supports the XML format (the JSON format is not supported)</description></item></list></para>
      <para>Technical description: Each layer is created using an <see cref="T:MonoTouch.Cocos2D.CCTMXLayer" /> (subclass of <see cref="T:MonoTouch.Cocos2D.CCSpriteBatchNode" />). If you have 5 layers, then 5 <see cref="T:MonoTouch.Cocos2D.CCTMXLayer" /> will be created, unless the layer visibility is off. In that case, the layer won't be created at all. You can obtain the layers (<see cref="T:MonoTouch.Cocos2D.CCTMXLayer" /> objects) at runtime by:<list type="bullet"><item><description>[map getChildByTag: tag_number]; // 0=1st layer, 1=2nd layer, 2=3rd layer, etc...</description></item><item><description>[map layerNamed: name_of_the_layer];Each object group is created using a CCTMXObjectGroup which is a subclass of NSMutableArray. You can obtain the object groups at runtime by:[map objectGroupNamed: name_of_the_object_group];Each object is a CCTMXObject.Each property is stored as a key-value pair in an NSMutableDictionary. You can obtain the properties at runtime by:   [map propertyNamed: name_of_the_property];
  [layer propertyNamed: name_of_the_property];
  [objectGroup propertyNamed: name_of_the_property];
  [object propertyNamed: name_of_the_property];
</description></item></list></para>
      <para>
        <simplesect kind="since">
          <para>v0.8.1 </para>
        </simplesect>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap (string tmxFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tmxFile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTMXFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tmxFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tmxFile">To be added.</param>
        <summary>
          <para>initializes a TMX Tiled Map with a TMX file </para>
        </summary>
        <remarks>
          <para>initializes a TMX Tiled Map with a TMX file </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXTiledMap (string tmxString, string resourcePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tmxString, string resourcePath) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithXML:resourcePath:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tmxString" Type="System.String" />
        <Parameter Name="resourcePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tmxString">To be added.</param>
        <param name="resourcePath">To be added.</param>
        <summary>
          <para>initializes a TMX Tiled Map with a TMX formatted XML string and a path to TMX resources </para>
        </summary>
        <remarks>
          <para>initializes a TMX Tiled Map with a TMX formatted XML string and a path to TMX resources </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLayer">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCTMXLayer GetLayer (string layerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Cocos2D.CCTMXLayer GetLayer(string layerName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layerNamed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTMXLayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="layerName">To be added.</param>
        <summary>
          <para>return the TMXLayer for the specific layer </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>return the TMXLayer for the specific layer </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectGroup">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCTMXObjectGroup GetObjectGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Cocos2D.CCTMXObjectGroup GetObjectGroup(string groupName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("objectGroupNamed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTMXObjectGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <summary>
          <para>return the TMXObjectGroup for the secific group </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>return the TMXObjectGroup for the secific group </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDictionary GetProperties (uint gid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSDictionary GetProperties(unsigned int32 gid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("propertiesForGID:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gid" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="gid">To be added.</param>
        <summary>
          <para>return properties dictionary for tile GID </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>return properties dictionary for tile GID </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject GetProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject GetProperty(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("propertyNamed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
          <para>return the value for the specific property name </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>return the value for the specific property name </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapOrientation">
      <MemberSignature Language="C#" Value="public virtual int MapOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MapOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("mapOrientation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>map orientation </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>map orientation </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF MapSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF MapSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("mapSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>the map's size property measured in tiles </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>the map's size property measured in tiles </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectGroups">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSMutableArray ObjectGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSMutableArray ObjectGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("objectGroups")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setObjectGroups:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSMutableArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>object groups </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>object groups </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSMutableDictionary Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSMutableDictionary Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("properties")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setProperties:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSMutableDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>properties </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>properties </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF TileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("tileSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>the tiles's size property measured in pixels </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>the tiles's size property measured in pixels </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>