<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCTexture2D" FullName="MonoTouch.Cocos2D.CCTexture2D">
  <TypeSignature Language="C#" Value="public class CCTexture2D : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCTexture2D extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Cocos2D</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CCTexture2D", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> class. This class allows to easily create OpenGL 2D textures from images, text or raw data. The created <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> object will always have power-of-two dimensions. Depending on how you create the <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> object, the actual image area of the texture might be smaller than the texture dimensions i.e. "contentSize" != (pixelsWide, pixelsHigh) and (maxS, maxT) != (1.0, 1.0). Be aware that the content of the generated textures will be upside-down! </para>
    </summary>
    <remarks>
      <para>
        <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> class. This class allows to easily create OpenGL 2D textures from images, text or raw data. The created <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> object will always have power-of-two dimensions. Depending on how you create the <see cref="T:MonoTouch.Cocos2D.CCTexture2D" /> object, the actual image area of the texture might be smaller than the texture dimensions i.e. "contentSize" != (pixelsWide, pixelsHigh) and (maxS, maxT) != (1.0, 1.0). Be aware that the content of the generated textures will be upside-down! </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (string pvrFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pvrFile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithPVRFile:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pvrFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pvrFile">To be added.</param>
        <summary>
          <para>Initializes a texture from a PVR file.</para>
        </summary>
        <remarks>
          <para>Initializes a texture from a PVR file.</para>
          <para>Supported PVR formats:<list type="bullet"><item><description>BGRA 8888</description></item><item><description>RGBA 8888</description></item><item><description>RGBA 4444</description></item><item><description>RGBA 5551</description></item><item><description>RBG 565</description></item><item><description>A 8</description></item><item><description>I 8</description></item><item><description>AI 8</description></item><item><description>PVRTC 2BPP</description></item><item><description>PVRTC 4BPP</description></item></list></para>
          <para>By default PVR images are treated as if they alpha channel is NOT premultiplied. You can override this behavior with this class method:<list type="bullet"><item><description>PVRImagesHavePremultipliedAlpha:haveAlphaPremultiplied;</description></item></list></para>
          <para>IMPORTANT: This method is only defined on iOS. It is not supported on the Mac version. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (MonoTouch.CoreGraphics.CGImage image, MonoTouch.Cocos2D.CCResolutionType resolutionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.CoreGraphics.CGImage image, valuetype MonoTouch.Cocos2D.CCResolutionType resolutionType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCGImage:resolutionType:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="resolutionType" Type="MonoTouch.Cocos2D.CCResolutionType" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="resolutionType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (string text, string fontName, float fontSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string fontName, float32 fontSize) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithString:fontName:fontSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="fontName" Type="System.String" />
        <Parameter Name="fontSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="fontName">To be added.</param>
        <param name="fontSize">To be added.</param>
        <summary>
          <para>Initializes a texture from a string with font name and font size </para>
        </summary>
        <remarks>
          <para>Initializes a texture from a string with font name and font size </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (IntPtr data, MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat, int width, int height, System.Drawing.SizeF size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int data, valuetype MonoTouch.Cocos2D.CCTexture2DPixelFormat pixelFormat, int32 width, int32 height, valuetype System.Drawing.SizeF size) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="pixelFormat" Type="MonoTouch.Cocos2D.CCTexture2DPixelFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="size" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="pixelFormat">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="size">To be added.</param>
        <summary>
          <para>Intializes with a texture2d with data </para>
        </summary>
        <remarks>
          <para>Intializes with a texture2d with data </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTexture2D (string text, System.Drawing.SizeF dimensions, MonoTouch.UIKit.UITextAlignment alignment, MonoTouch.Cocos2D.CCVerticalTextAlignment vertAlignment, string fontName, float fontSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, valuetype System.Drawing.SizeF dimensions, valuetype MonoTouch.UIKit.UITextAlignment alignment, valuetype MonoTouch.Cocos2D.CCVerticalTextAlignment vertAlignment, string fontName, float32 fontSize) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="dimensions" Type="System.Drawing.SizeF" />
        <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
        <Parameter Name="vertAlignment" Type="MonoTouch.Cocos2D.CCVerticalTextAlignment" />
        <Parameter Name="fontName" Type="System.String" />
        <Parameter Name="fontSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="dimensions">To be added.</param>
        <param name="alignment">To be added.</param>
        <param name="vertAlignment">To be added.</param>
        <param name="fontName">To be added.</param>
        <param name="fontSize">To be added.</param>
        <summary>
          <para>Initializes a texture from a string with dimensions, alignment, font name and font size </para>
        </summary>
        <remarks>
          <para>Initializes a texture from a string with dimensions, alignment, font name and font size </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF ContentSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.SizeF ContentSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("contentSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>returns the content size of the texture in points </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>returns the content size of the texture in points </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSizeInPixels">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF ContentSizeInPixels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF ContentSizeInPixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("contentSizeInPixels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>returns content size of the texture in pixels </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>returns content size of the texture in pixels </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAlphaPixelFormat">
      <MemberSignature Language="C#" Value="public static MonoTouch.Cocos2D.CCTexture2DPixelFormat DefaultAlphaPixelFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype MonoTouch.Cocos2D.CCTexture2DPixelFormat DefaultAlphaPixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("defaultAlphaPixelFormat")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDefaultAlphaPixelFormat:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTexture2DPixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawAtRect">
      <MemberSignature Language="C#" Value="public virtual void DrawAtRect (System.Drawing.PointF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawAtRect(valuetype System.Drawing.PointF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("drawAtPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>
          <para>draws a texture at a given point </para>
        </summary>
        <remarks>
          <para>draws a texture at a given point </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInRect">
      <MemberSignature Language="C#" Value="public virtual void DrawInRect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInRect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("drawInRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>
          <para>draws a texture inside a rect </para>
        </summary>
        <remarks>
          <para>draws a texture inside a rect </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPremultipliedAlpha">
      <MemberSignature Language="C#" Value="public virtual bool HasPremultipliedAlpha { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPremultipliedAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("hasPremultipliedAlpha")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>whether or not the texture has their Alpha premultiplied </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>whether or not the texture has their Alpha premultiplied </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepData">
      <MemberSignature Language="C#" Value="public virtual IntPtr KeepData (IntPtr data, uint length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int KeepData(native int data, unsigned int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("keepData:length:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxS">
      <MemberSignature Language="C#" Value="public virtual float MaxS { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("maxS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setMaxS:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>texture max S </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>texture max S </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxT">
      <MemberSignature Language="C#" Value="public virtual float MaxT { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxT" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("maxT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setMaxT:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>texture max T </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>texture max T </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual uint Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>texture name </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>texture name </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCTexture2DPixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCTexture2DPixelFormat PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("pixelFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCTexture2DPixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>pixel format of the texture </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>pixel format of the texture </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsHigh">
      <MemberSignature Language="C#" Value="public virtual int PixelsHigh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelsHigh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("pixelsHigh")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>hight in pixels </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>hight in pixels </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsWide">
      <MemberSignature Language="C#" Value="public virtual int PixelsWide { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelsWide" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("pixelsWide")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>width in pixels </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>width in pixels </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PVRImageHavePremultipliedAlpha">
      <MemberSignature Language="C#" Value="public static bool PVRImageHavePremultipliedAlpha { set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool PVRImageHavePremultipliedAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("PVRImagesHavePremultipliedAlpha:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseData">
      <MemberSignature Language="C#" Value="public virtual void ReleaseData (IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseData(native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("releaseData:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>
          <para>These functions are needed to create mutable textures </para>
        </summary>
        <remarks>
          <para>These functions are needed to create mutable textures </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionType">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCResolutionType ResolutionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Cocos2D.CCResolutionType ResolutionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("resolutionType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setResolutionType:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCResolutionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderProgram">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Cocos2D.CCGLProgram ShaderProgram { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Cocos2D.CCGLProgram ShaderProgram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("shaderProgram")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setShaderProgram:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Cocos2D.CCGLProgram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>shader program used by drawAtPoint and drawInRect </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>shader program used by drawAtPoint and drawInRect </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>